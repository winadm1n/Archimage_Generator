name: Generate and execute Diagrams python script

on:
  workflow_dispatch:
    inputs:
      mermaid_script:
        description: 'Mermaid Script'
        required: true
      img_name:
        description: 'Name to store image'
        required: true
 
jobs:
 
  generate_diagrams_code:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.ACTIONS_PAT_TOKEN }}
        
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        sudo apt-get install graphviz

        
    - name: Generate Diagrams Code
      run: |
        echo "${{ github.event.inputs.mermaid_script }}" > temporary_mermaid.html
        python archimagen.py -m "$(cat temporary_mermaid.html)" -o "${{ github.event.inputs.img_name }}"

        
    - name: Create Diagram
      run: |
        cd dynamically_generated_stuff
        rm -rf temp_src_images/*
        # rm -rf architecture_diagram.png
        python dynamic_diagrams_code.py

    - name: Detect text from Diagram
      run: |
        # Update package list
        sudo apt update
        
        # Install Tesseract OCR
        sudo apt install tesseract-ocr
        
        # # Download an image from a URL (replace with your actual URL)
        # wget -O image.jpg https://example.com/image.jpg
        # wget -O image.png https://learn.microsoft.com/en-us/azure/architecture/solution-ideas/media/simple-branded-website.png
        # wget -O image.png https://learn.microsoft.com/azure/architecture/browse/thumbs/architecture-automation.png
        wget -O image.png https://k21academy.com/wp-content/uploads/2020/10/Diagram-02-1024x531.png
        # pwd
        # ls -a
        
        # Perform OCR on the downloaded image
        # tesseract "dynamically_generated_stuff/architecture_images/${{ github.event.inputs.img_name }}.png" output
        tesseract image.png output
        
        # Display the OCR output
        cat output.txt


        
    - name: Save Diagram to Main
      run: |
        git config user.email "winadm1n@protonmail.com"
        git config user.name "winadm1n"
        git add .
        git commit -m "Move files to new folder"
        git push origin main
